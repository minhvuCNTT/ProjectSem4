package com.project.models;
// Generated Nov 4, 2022, 7:41:33 AM by Hibernate Tools 4.3.6.Final

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Positive;

import org.hibernate.validator.constraints.Length;

/**
 * Product generated by hbm2java
 */
@Entity
@Table(name = "product", catalog = "warehouse_management")
public class Product implements java.io.Serializable {

	private Integer id;
	private Category category;
	
	@NotEmpty
	@Length(min = 5, max = 200)
	private String name;

	@Positive
	private double price;
	private int quantity;
	
	@NotEmpty
	@Length(min = 3, max = 20)
	private String unit;
	private Set<InvoiceExportDetails> invoiceExportDetailses = new HashSet<InvoiceExportDetails>(0);
	private Set<InvoiceImportDetails> invoiceImportDetailses = new HashSet<InvoiceImportDetails>(0);
	private List<ProductImage> productImages = new ArrayList<ProductImage>(0);

	public Product() {
	}

	public Product(Category category, String name, double price, int quantity, String unit) {
		this.category = category;
		this.name = name;
		this.price = price;
		this.quantity = quantity;
		this.unit = unit;
	}

	public Product(Category category, String name, double price, int quantity, String unit,
			Set<InvoiceExportDetails> invoiceExportDetailses, Set<InvoiceImportDetails> invoiceImportDetailses,
			List<ProductImage> productImages) {
		this.category = category;
		this.name = name;
		this.price = price;
		this.quantity = quantity;
		this.unit = unit;
		this.invoiceExportDetailses = invoiceExportDetailses;
		this.invoiceImportDetailses = invoiceImportDetailses;
		this.productImages = productImages;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "category_id", nullable = false)
	public Category getCategory() {
		return this.category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}

	@Column(name = "name", nullable = false, length = 250)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "price", nullable = false, precision = 22, scale = 0)
	public double getPrice() {
		return this.price;
	}

	public void setPrice(double price) {
		this.price = price;
	}

	@Column(name = "quantity", nullable = false)
	public int getQuantity() {
		return this.quantity;
	}

	public void setQuantity(int quantity) {
		this.quantity = quantity;
	}

	@Column(name = "unit", nullable = false, length = 20)
	public String getUnit() {
		return this.unit;
	}

	public void setUnit(String unit) {
		this.unit = unit;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<InvoiceExportDetails> getInvoiceExportDetailses() {
		return this.invoiceExportDetailses;
	}

	public void setInvoiceExportDetailses(Set<InvoiceExportDetails> invoiceExportDetailses) {
		this.invoiceExportDetailses = invoiceExportDetailses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<InvoiceImportDetails> getInvoiceImportDetailses() {
		return this.invoiceImportDetailses;
	}

	public void setInvoiceImportDetailses(Set<InvoiceImportDetails> invoiceImportDetailses) {
		this.invoiceImportDetailses = invoiceImportDetailses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public List<ProductImage> getProductImages() {
		return this.productImages;
	}

	public void setProductImages(List<ProductImage> productImages) {
		this.productImages = productImages;
	}

}
